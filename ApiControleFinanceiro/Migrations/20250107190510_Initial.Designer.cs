// <auto-generated />
using System;
using ApiControleFinanceiro.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiControleFinanceiro.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250107190510_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiControleFinanceiro.Entities.Conta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("InstituicaoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Saldo")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("TipoContaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstituicaoId");

                    b.HasIndex("TipoContaId");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("ApiControleFinanceiro.Entities.InstituicaoFinanceira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CodigoInstituicao")
                        .HasColumnType("int");

                    b.Property<string>("NomeInstituicao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("InstituicaoFinanceiras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodigoInstituicao = 341,
                            NomeInstituicao = "Itaú"
                        },
                        new
                        {
                            Id = 2,
                            CodigoInstituicao = 104,
                            NomeInstituicao = "Caixa"
                        },
                        new
                        {
                            Id = 3,
                            CodigoInstituicao = 260,
                            NomeInstituicao = "Nubank"
                        },
                        new
                        {
                            Id = 4,
                            CodigoInstituicao = 77,
                            NomeInstituicao = "Inter"
                        },
                        new
                        {
                            Id = 5,
                            CodigoInstituicao = 0,
                            NomeInstituicao = "PeerBR"
                        });
                });

            modelBuilder.Entity("ApiControleFinanceiro.Entities.MeioDePagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("MeioDePagamentos");
                });

            modelBuilder.Entity("ApiControleFinanceiro.Entities.Movimentacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataMovimentacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MeioPagamentoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoMovimentoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("MeioPagamentoId");

                    b.HasIndex("TipoMovimentoId");

                    b.ToTable("Movimentacoes");
                });

            modelBuilder.Entity("ApiControleFinanceiro.Entities.TipoDeConta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TipoConta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoDeContas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TipoConta = "Conta Corrente"
                        },
                        new
                        {
                            Id = 2,
                            TipoConta = "Poupança"
                        },
                        new
                        {
                            Id = 3,
                            TipoConta = "Investimento"
                        });
                });

            modelBuilder.Entity("ApiControleFinanceiro.Entities.TipoMovimentacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("MovimentaSaldo")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TipoMovimentacoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Crédito",
                            MovimentaSaldo = true
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Débito",
                            MovimentaSaldo = true
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Transferência",
                            MovimentaSaldo = false
                        });
                });

            modelBuilder.Entity("ApiControleFinanceiro.Entities.Conta", b =>
                {
                    b.HasOne("ApiControleFinanceiro.Entities.InstituicaoFinanceira", "Instituicao")
                        .WithMany()
                        .HasForeignKey("InstituicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiControleFinanceiro.Entities.TipoDeConta", "TipoConta")
                        .WithMany()
                        .HasForeignKey("TipoContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instituicao");

                    b.Navigation("TipoConta");
                });

            modelBuilder.Entity("ApiControleFinanceiro.Entities.Movimentacao", b =>
                {
                    b.HasOne("ApiControleFinanceiro.Entities.MeioDePagamento", "MeioPagamento")
                        .WithMany()
                        .HasForeignKey("MeioPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiControleFinanceiro.Entities.TipoMovimentacao", "TipoMovimento")
                        .WithMany()
                        .HasForeignKey("TipoMovimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeioPagamento");

                    b.Navigation("TipoMovimento");
                });
#pragma warning restore 612, 618
        }
    }
}
